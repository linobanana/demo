{"version":3,"sources":["js/requests.js","js/settings.js","js/map.js","js/locale/date_time_en.js","js/locale/date_time_ru.js","js/locale/date_time_be.js","js/date_time.js","js/locale/en.js","js/locale/ru.js","js/locale/be.js","js/dom.js","js/translate.js","js/index.js"],"names":["getLinkToImage","queryString","fetch","url","UNSPLASH_TOKEN","response","json","data","urls","regular","getUserLocation","LOCATION_API_TOKEN","getForecast","lat","lon","lang","WEATHER_API_TOKEN","translate","text","TRANSLATE_API_TOKEN","getCoordinates","requestString","GEOCODER_API_TOKEN","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","name","TypeError","alert","setUserSettings","units","localStorage","setItem","refreshBackground","link","document","querySelector","style","backgroundImage","createQueryString","forecast","str","date","Date","month","getMonth","time","getHours","list","weather","description","join","locationString","value","degrees","Math","trunc","Number","minutes","fillUnits","querySelectorAll","forEach","item","innerText","convertDegrees","getItem","fahr","round","cels","initMap","map","ymaps","Map","center","zoom","controls","remove","getElementById","addEventListener","evt","keyCode","destroy","dayOfWeekEN","dayOfWeekENFull","monthsEN","dayOfWeekRU","dayOfWeekRUFull","monthsRU","dayOfWeekBE","dayOfWeekBEFull","monthsBE","showDate","localDate","result","day","dayOfWeek","getUTCDate","getUTCMonth","getUTCDay","getDate","getDay","clock","hours","getMinutes","convertToLocalTime","timezone","now","toUTCString","localMs","parse","setLocalClock","getUTCHours","getUTCMinutes","updateClock","hoursNum","minNum","fieldsEN","change_location","city","search","wind_speed_label","wind_metric","humidity_label","feels_like_label","fieldsRU","fieldsBE","renderDom","country","wrapper","createElement","className","innerHTML","body","prepend","currentWeather","currentForecast","weatherIcon","id","icon","weatherStatus","status","statusString","toUpperCase","slice","translated","toString","location","currDegrees","changeLocationBlock","changeLocDesc","placeholder","buttonName","windLabel","windMetric","humidityLabel","feelsLabel","nextDaysForecast","append","main","temp","classList","add","wind","speed","humidity","feels_like","day1","day2","day3","dt","push","length","pop","day1Name","day2Name","day3Name","idx","day1Num","day2Num","day3Num","a","changeDOM","searchCity","coords","mapInit","ready","translateDOM","prevLang","targetLang","currentDayOfWeek","currentMonth","currentDayOfWeekFull","targetDayOfWeek","targetMonth","targetFields","targetDayOfWeekFull","translatedStatus","translatedCity","num","indexOf","clockInterval","recognizer","webkitSpeechRecognition","speech","start","stopInterval","clearInterval","loc","setInterval","target","query","contains","toggle","unitsFields","degreesFields","toLowerCase","inputValue","trim","onresult","event","results","resultIndex","isFinal","transcript"],"mappings":"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","file":"js.1835893a.js","sourceRoot":"..\\src","sourcesContent":["export async function getLinkToImage(queryString) {\n  const UNSPLASH_TOKEN = 'e7085d7b9f940ceb950f950cc8c4108e56165596aa1a6917f91b24c32d355b8f';\n  const url = `https://api.unsplash.com/photos/random?query=${queryString}&client_id=${UNSPLASH_TOKEN}&orientation=landscape`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.urls.regular;\n}\n\nexport async function getUserLocation() {\n  const LOCATION_API_TOKEN = '46b6395b209527';\n  const url = `https://ipinfo.io/json?token=${LOCATION_API_TOKEN}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getForecast(lat, lon, lang) {\n  const WEATHER_API_TOKEN = '1d0a4cc831ef2ef6f5536de6237d027e';\n  const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&lang=${lang}&units=metric&APPID=${WEATHER_API_TOKEN}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function translate(text, lang) {\n  const TRANSLATE_API_TOKEN = 'trnsl.1.1.20191211T132413Z.36bf9ba7e614085c.663578f929dd26fdede9a6967785c46cad70f0b8';\n  const url = `https://translate.yandex.net/api/v1.5/tr.json/translate?key=${TRANSLATE_API_TOKEN}&lang=${lang}&format=plain&text=${text}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getCoordinates(requestString) {\n  try {\n    const GEOCODER_API_TOKEN = '8338b440-d1bb-4b21-b067-6d0cb727c2ea';\n    const url = `https://geocode-maps.yandex.ru/1.x?geocode=${requestString}&apikey=${GEOCODER_API_TOKEN}&sco=longlat&format=json&results=1&lang=en_US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const [lat, lon] = data.response.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(' ');\n    const name = `${data.response.GeoObjectCollection.featureMember[0].GeoObject.name}`;\n    return { lat, lon, name };\n  } catch (e) {\n    if (e instanceof TypeError) {\n      alert('Incorrect name of city/country. Please try again.');\n    }\n  }\n}\n","import { getLinkToImage } from './requests';\n\n\nexport function setUserSettings(lang = 'en', units = '°C') {\n  localStorage.setItem('lang', lang);\n  localStorage.setItem('units', units);\n}\n\nexport async function refreshBackground(queryString) {\n  const link = await getLinkToImage(queryString);\n  document.querySelector('.main').style.backgroundImage = `url(${link})`;\n}\n\nexport function createQueryString(forecast) {\n  let str = '';\n  const date = new Date();\n  const month = date.getMonth();\n  if (month >= 2 && month <= 4) { str += 'spring-'; }\n  if (month >= 5 && month <= 7) { str += 'summer-'; }\n  if (month >= 8 && month <= 10) { str += 'autumn-'; }\n  if (month === 11 || month === 0 || month === 1) { str += 'winter-'; }\n  const time = date.getHours();\n  if (time >= 0 && time <= 6) { str += 'night-'; }\n  if (time > 6 && time <= 12) { str += 'morning-'; }\n  if (time > 12 && time <= 18) { str += 'day-'; }\n  if (time > 18 && time <= 23) { str += 'evening-'; }\n  const { list } = forecast;\n  str += list[0].weather[0].description.split(' ').join('-');\n  return str;\n}\n\nexport function locationString(value) {\n  const degrees = Math.trunc(Number(value));\n  let minutes = Math.trunc((+value - degrees) * 60);\n  if (minutes < 0) {\n    minutes = minutes * -1;\n  }\n  return `${degrees}° ${minutes}'`;\n}\n\nexport function fillUnits(value) {\n  const unitsFields = document.querySelectorAll('.units');\n  unitsFields.forEach((item) => item.innerText = value);\n}\n\nexport function convertDegrees(value) {\n  if (localStorage.getItem('units') === '°F') {\n    const fahr = (Number(value) * 9 / 5) + 32;\n    return `${Math.round(fahr)}`;\n  } if (localStorage.getItem('units') === '°C') {\n    const cels = (Number(value) - 32) * 5 / 9;\n    return `${Math.round(cels)}`;\n  }\n}\n","export function initMap(lat, lon) {\n  const map = new ymaps.Map('map', {\n    center: [Number(lat), Number(lon)],\n    zoom: 7,\n  });\n  map.controls.remove('mediumMapDefaultSet');\n  document.getElementById('search-city-input').addEventListener('keypress', (evt) => {\n    if (evt.keyCode === 13) {\n      map.destroy();\n    }\n  });\n  document.getElementById('search-btn').addEventListener('click', () => {\n    map.destroy();\n  });\n}\n","const dayOfWeekEN = [\n  'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n];\n\nconst dayOfWeekENFull = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',\n];\n\nconst monthsEN = [\n  'January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December',\n];\n\nexport { dayOfWeekEN, dayOfWeekENFull, monthsEN };\n","const dayOfWeekRU = [\n  'Вск', 'Пнд', 'Втр', 'Срд', 'Чтв', 'Птн', 'Сбт',\n];\n\nconst dayOfWeekRUFull = [\n  'Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота',\n];\n\nconst monthsRU = [\n  'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\n  'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь',\n];\n\nexport { dayOfWeekRU, dayOfWeekRUFull, monthsRU };\n","const dayOfWeekBE = [\n  'Няд', 'Пнд', 'Аўт', 'Сер', 'Чцв', 'Пят', 'Суб',\n];\n\nconst dayOfWeekBEFull = [\n  'Нядзеля', 'Панядзелак', 'Аўторак', 'Серада', 'Чацвер', 'Пятнiца', 'Субота',\n];\n\nconst monthsBE = [\n  'Студзень', 'Люты', 'Сакавiк', 'Красавiк', 'Май', 'Чэрвень', 'Лiпень', 'Жнiвень',\n  'Верасень', 'Кастрычнiк', 'Лiстапад', 'Снежань',\n];\n\nexport { dayOfWeekBE, dayOfWeekBEFull, monthsBE };\n","import { dayOfWeekEN, monthsEN } from './locale/date_time_en';\nimport { dayOfWeekRU, monthsRU } from './locale/date_time_ru';\nimport { dayOfWeekBE, monthsBE } from './locale/date_time_be';\n\nexport function showDate(localDate) {\n  let result = '';\n  let date;\n  let day;\n  let month;\n  let dayOfWeek;\n  if (!localDate) {\n    date = new Date();\n    day = date.getDate();\n    month = date.getMonth();\n    dayOfWeek = date.getDay();\n  } else if (localDate) {\n    date = new Date(localDate);\n    day = date.getUTCDate();\n    month = date.getUTCMonth();\n    dayOfWeek = date.getUTCDay();\n  }\n  if (day <= 9) { day = `0${day}`; }\n  switch (localStorage.getItem('lang')) {\n    case 'en':\n      result = `${dayOfWeekEN[dayOfWeek]} ${day} ${monthsEN[month]}`;\n      break;\n    case 'ru':\n      result = `${dayOfWeekRU[dayOfWeek]} ${day} ${monthsRU[month]}`;\n      break;\n    case 'be':\n      result = `${dayOfWeekBE[dayOfWeek]} ${day} ${monthsBE[month]}`;\n      break;\n    default:\n      break;\n  }\n  return result;\n}\n\nexport function clock() {\n  const date = new Date();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  if (hours <= 9) { hours = `0${hours}`; }\n  if (minutes <= 9) { minutes = `0${minutes}`; }\n  document.getElementById('time').innerText = `${hours}:${minutes}`;\n  return `${hours}:${minutes}`;\n}\n\nexport function convertToLocalTime(timezone) {\n  const now = new Date().toUTCString();\n  const milliseconds = Date.parse(now);\n  const localMs = milliseconds + (Number(timezone) * 1000);\n  const result = new Date(localMs).toUTCString();\n  return result;\n}\n\nexport function setLocalClock(date) {\n  const time = new Date(date);\n  let hours = time.getUTCHours();\n  let minutes = time.getUTCMinutes();\n  if (hours <= 9) { hours = `0${hours}`; }\n  if (minutes <= 9) { minutes = `0${minutes}`; }\n  document.getElementById('time').innerText = `${hours}:${minutes}`;\n  return `${hours}:${minutes}`;\n}\n\nexport function updateClock() {\n  const time = document.getElementById('time');\n  const [hours, minutes] = time.innerText.split(':');\n  let hoursNum = Number(hours);\n  let minNum = Number(minutes);\n  if (minNum < 59) {\n    minNum += 1;\n  } else if (hoursNum < 23 && minNum === 59) {\n    hoursNum += 1;\n    minNum = 0;\n  } else if (hoursNum === 23 && minNum === 59) {\n    hoursNum = 0;\n    minNum = 0;\n  }\n  time.innerText = `${hoursNum > 9 ? `${hoursNum}` : `0${hoursNum}`}:${minNum > 9 ? `${minNum}` : `0${minNum}`}`;\n}\n","export const fieldsEN = {\n  change_location: 'Change location',\n  city: 'City',\n  search: 'Search',\n  wind_speed_label: 'Wind speed',\n  wind_metric: 'm/s',\n  humidity_label: 'Humidity',\n  feels_like_label: 'Feels like',\n};\n","export const fieldsRU = {\n  change_location: 'Изменить местоположение',\n  city: 'Город',\n  search: 'Поиск',\n  wind_speed_label: 'Скорость ветра',\n  wind_metric: 'м/с',\n  humidity_label: 'Влажность',\n  feels_like_label: 'Ощущается как',\n};\n","export const fieldsBE = {\n  change_location: 'Змяніць месцазнаходжанне',\n  city: 'Горад',\n  search: 'Пошук',\n  wind_speed_label: 'Хуткасць ветру',\n  wind_metric: 'м/с',\n  humidity_label: 'Вільготнасць',\n  feels_like_label: 'Адчуваецца як',\n};\n","import {\n  locationString, fillUnits, convertDegrees, createQueryString, refreshBackground,\n} from './settings';\nimport { translate, getCoordinates, getForecast } from './requests';\nimport {\n  showDate, clock, setLocalClock, convertToLocalTime,\n} from './date_time';\nimport { dayOfWeekENFull } from './locale/date_time_en';\nimport { dayOfWeekRUFull } from './locale/date_time_ru';\nimport { dayOfWeekBEFull } from './locale/date_time_be';\nimport { fieldsEN } from './locale/en';\nimport { fieldsRU } from './locale/ru';\nimport { fieldsBE } from './locale/be';\nimport { initMap } from './map';\n\nexport async function renderDom(lat, lon, lang, city, country, forecast, units) {\n  const wrapper = document.createElement('div');\n  wrapper.className = 'wrapper';\n  wrapper.innerHTML = `\n  <section class=\"main\">\n    <div class=\"current-weather\">\n    </div>\n    <div class=\"settings\">\n    </div>\n    <div class=\"detailed-forecast\">\n    </div>\n    <div class=\"future-forecast\">\n    </div>\n    <div class=\"location\">\n    </div>\n  </section>`;\n  document.body.prepend(wrapper);\n\n  const currentWeather = document.querySelector('.current-weather');\n\n  const currentForecast = forecast.list[0];\n\n  const weatherIcon = document.createElement('div');\n  weatherIcon.id = 'weather-icon';\n  weatherIcon.style.backgroundImage = `url('http://openweathermap.org/img/wn/${forecast.list[0].weather[0].icon}@2x.png')`;\n\n  const weatherStatus = document.createElement('h2');\n  weatherStatus.id = 'weather-status';\n  const status = forecast.list[0].weather[0].description;\n  const statusString = `${status[0].toUpperCase()}${status.slice(1)}`;\n  if (lang === 'be') {\n    const translated = await translate(statusString, 'en-be');\n    weatherStatus.innerText = translated.text.toString();\n  } else {\n    weatherStatus.innerText = statusString;\n  }\n\n  const location = document.createElement('h5');\n  location.id = 'location';\n  if (lang !== 'en') {\n    const translated = await translate(city, `en-${lang}`);\n    location.innerText = `${translated.text.toString()}, ${country}`;\n  } else {\n    location.innerText = `${city}, ${country}`;\n  }\n\n  const date = document.createElement('h5');\n  date.id = 'date';\n  date.innerText = showDate();\n\n  const time = document.createElement('h2');\n  time.id = 'time';\n\n  const currDegrees = document.createElement('h2');\n  currDegrees.className = 'current-degrees';\n  currDegrees.innerHTML = '<span class=\"degrees\"></span><span class=\"units\"></span>';\n\n  const changeLocationBlock = document.createElement('div');\n  changeLocationBlock.innerHTML = `<div id=\"change-location-block\">\n    <button id=\"change-location-btn\" class=\"btn btn-light\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n    <i class=\"fas fa-map-marker-alt\"></i><span id=\"changeLoc\"></span></button>\n    <div class=\"collapse\" id=\"collapseExample\">\n    <div class=\"input-group\">\n    <input id=\"search-city-input\" type=\"text\" class=\"form-control\" aria-label=\"Search city\" aria-describedby=\"button-addon4\">\n    <div class=\"input-group-append\">\n    <button class=\"btn btn-light\" id=\"micro\" type=\"button\"><i class=\"fas fa-microphone\"></i></button>\n    <button class=\"btn btn btn-info\" id=\"search-btn\" type=\"button\"></button>\n    </div>\n    </div>\n    </div>\n    </div>`;\n\n  let changeLocDesc = '';\n  let placeholder = '';\n  let buttonName = '';\n  let windLabel = '';\n  let windMetric = '';\n  let humidityLabel = '';\n  let feelsLabel = '';\n  switch (lang) {\n    case 'en':\n      changeLocDesc = fieldsEN.change_location;\n      placeholder = fieldsEN.city;\n      buttonName = fieldsEN.search;\n      windLabel = fieldsEN.wind_speed_label;\n      windMetric = fieldsEN.wind_metric;\n      humidityLabel = fieldsEN.humidity_label;\n      feelsLabel = fieldsEN.feels_like_label;\n      break;\n    case 'ru':\n      changeLocDesc = fieldsRU.change_location;\n      placeholder = fieldsRU.city;\n      buttonName = fieldsRU.search;\n      windLabel = fieldsRU.wind_speed_label;\n      windMetric = fieldsRU.wind_metric;\n      humidityLabel = fieldsRU.humidity_label;\n      feelsLabel = fieldsRU.feels_like_label;\n      break;\n    case 'be':\n      changeLocDesc = fieldsBE.change_location;\n      placeholder = fieldsBE.city;\n      buttonName = fieldsBE.search;\n      windLabel = fieldsBE.wind_speed_label;\n      windMetric = fieldsBE.wind_metric;\n      humidityLabel = fieldsBE.humidity_label;\n      feelsLabel = fieldsBE.feels_like_label;\n      break;\n    default:\n      break;\n  }\n\n  currentWeather.append(weatherIcon, weatherStatus, location,\n    date, time, currDegrees, changeLocationBlock);\n  time.innerText = clock();\n  currentWeather.querySelector('.degrees').innerText = `${Math.round(currentForecast.main.temp)}`;\n  document.getElementById('changeLoc').innerText = changeLocDesc;\n  document.getElementById('search-city-input').placeholder = placeholder;\n  document.getElementById('search-btn').innerText = buttonName;\n\n  const settings = document.querySelector('.settings');\n  settings.innerHTML = `<div class=\"settings\">\n    <div class=\"menu\">\n    <button type=\"button\" class=\"btn btn-secondary\" id=\"refresh-bg-btn\"></button>\n    <div class=\"btn-group dropdown\">\n    <button id=\"language-btn\" type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n      EN\n    </button>\n    <div class=\"dropdown-menu\" id=\"lang-list\">\n    <span class=\"dropdown-item\">EN</span>\n    <div class=\"dropdown-divider\"></div>\n    <span class=\"dropdown-item\">RU</span>\n    <div class=\"dropdown-divider\"></div>\n    <span class=\"dropdown-item\"\">BE</span>\n    </div>\n    </div>\n    <div id=\"units\" class=\"btn-group\">\n    <button type=\"button\" class=\"btn btn-secondary celsius\">°C</button>\n    <button type=\"button\" class=\"btn btn-secondary fahrenheit\">°F</button>\n    </div>\n    <button type=\"button\" class=\"btn btn-light\" id=\"show-location-btn\"></button>\n    </div></div>`;\n\n  document.getElementById('language-btn').innerText = lang.toUpperCase();\n  if (units === '°C') {\n    document.querySelector('.celsius').classList.add('active-unit');\n  } else if (units === '°F') {\n    document.querySelector('.fahrenheit').classList.add('active-unit');\n  }\n\n  const detailedForecast = document.querySelector('.detailed-forecast');\n  detailedForecast.innerHTML = `<div>\n    <i class=\"fas fa-wind\"></i><span id=\"wind-label\"></span>\n    <p id=\"wind\"></p></div><div>\n    <i class=\"fas fa-tint\"></i><span id=\"humidity-label\"></span>\n    <p id=\"humidity\"></p></div><div>\n    <i class=\"far fa-hand-point-right\"></i><span id=\"feels-label\"></span>\n    <p id=\"feels-like\"><span class=\"degrees\"></span><span class=\"units\"></span></p></div>`;\n\n  document.getElementById('wind-label').innerText = windLabel;\n  document.getElementById('wind').innerText = `${Math.round(currentForecast.wind.speed)} ${windMetric}`;\n  document.getElementById('humidity-label').innerText = humidityLabel;\n  document.getElementById('humidity').innerText = `${currentForecast.main.humidity}%`;\n  document.getElementById('feels-label').innerText = feelsLabel;\n  document.getElementById('feels-like').querySelector('.degrees').innerText = `${Math.round(currentForecast.main.feels_like)}`;\n\n\n  const futureForecast = document.querySelector('.future-forecast');\n  futureForecast.innerHTML = `<div class=\"cards-wrapper\"><div id=\"tommorow\"><h2 class=\"day\">\n    </h2>\n      <div class=\"forecast\">\n        <span class=\"degrees\"></span>\n        <span class=\"units\"></span>\n        <div class=\"icon\"></div>\n      </div>\n    </div>\n    <div id=\"day-after-tommorow\">\n      <h2 class=\"day\">\n      </h2>\n      <div class=\"forecast\">\n        <span class=\"degrees\"></span>\n        <span class=\"units\"></span>\n        <div class=\"icon\"></div>\n      </div>\n    </div>\n    <div id=\"after-the-day-after-tomorrow\">\n      <h2 class=\"day\">\n      </h2>\n      <div class=\"forecast\">\n        <span class=\"degrees\"></span>\n        <span class=\"units\"></span>\n        <div class=\"icon\"></div>\n      </div>\n    </div>\n    </div>`;\n\n  const day1 = document.getElementById('tommorow');\n  const day2 = document.getElementById('day-after-tommorow');\n  const day3 = document.getElementById('after-the-day-after-tomorrow');\n\n  const nextDaysForecast = [];\n  forecast.list.map((item) => {\n    const now = new Date();\n    const dt = new Date(item.dt * 1000);\n    if (dt.getHours() === 15 && dt.getDay() !== now.getDay()) {\n      nextDaysForecast.push(item);\n    }\n    return item;\n  });\n\n  while (nextDaysForecast.length > 3) {\n    nextDaysForecast.pop();\n  }\n\n  let day1Name = '';\n  let day2Name = '';\n  let day3Name = '';\n  let day1Num;\n  let day2Num;\n  let day3Num;\n\n  nextDaysForecast.forEach((item, idx) => {\n    const dt = new Date(item.dt * 1000);\n    if (idx === 0) { day1Num = dt.getDay(); }\n    if (idx === 1) { day2Num = dt.getDay(); }\n    if (idx === 2) { day3Num = dt.getDay(); }\n    return item;\n  });\n\n  switch (lang) {\n    case 'en':\n      day1Name = dayOfWeekENFull[day1Num];\n      day2Name = dayOfWeekENFull[day2Num];\n      day3Name = dayOfWeekENFull[day3Num];\n      break;\n    case 'ru':\n      day1Name = dayOfWeekRUFull[day1Num];\n      day2Name = dayOfWeekRUFull[day2Num];\n      day3Name = dayOfWeekRUFull[day3Num];\n      break;\n    case 'be':\n      day1Name = dayOfWeekBEFull[day1Num];\n      day2Name = dayOfWeekBEFull[day2Num];\n      day3Name = dayOfWeekBEFull[day3Num];\n      break;\n    default:\n      break;\n  }\n\n  day1.querySelector('.day').innerHTML = day1Name;\n  day2.querySelector('.day').innerHTML = day2Name;\n  day3.querySelector('.day').innerHTML = day3Name;\n\n  day1.querySelector('.degrees').innerHTML = `${Math.round(nextDaysForecast[0].main.temp)}`;\n  day2.querySelector('.degrees').innerHTML = `${Math.round(nextDaysForecast[1].main.temp)}`;\n  day3.querySelector('.degrees').innerHTML = `${Math.round(nextDaysForecast[2].main.temp)}`;\n\n  day1.querySelector('.icon').style.backgroundImage = `url('http://openweathermap.org/img/wn/${nextDaysForecast[0].weather[0].icon}@2x.png')`;\n  day2.querySelector('.icon').style.backgroundImage = `url('http://openweathermap.org/img/wn/${nextDaysForecast[1].weather[0].icon}@2x.png')`;\n  day3.querySelector('.icon').style.backgroundImage = `url('http://openweathermap.org/img/wn/${nextDaysForecast[2].weather[0].icon}@2x.png')`;\n\n  const geopositionBlock = document.querySelector('.location');\n  geopositionBlock.innerHTML = `<div class=\"coordinates\">\n    <p class=\"latitude-icon\"></p><span id=\"latitude\"></span>\n    <p class=\"longitude-icon\"></p><span id=\"longitude\"></span>\n    </div>\n    <div id=\"map\"></div>`;\n\n  document.getElementById('latitude').innerText = locationString(lat);\n  document.getElementById('longitude').innerText = locationString(lon);\n\n  fillUnits(units);\n\n  if (units === '°F') {\n    const degreesFields = document.querySelectorAll('.degrees');\n    degreesFields.forEach((item) => {\n      const a = item.innerText;\n      item.innerText = convertDegrees(a);\n      return item;\n    });\n  }\n}\n\nexport async function changeDOM(lat, lon, lang, city, country, time, forecast, units) {\n  const currentWeather = document.querySelector('.current-weather');\n\n  const currentForecast = forecast.list[0];\n\n  document.getElementById('weather-icon').style.backgroundImage = `url('http://openweathermap.org/img/wn/${forecast.list[0].weather[0].icon}@2x.png')`;\n  const weatherStatus = document.getElementById('weather-status');\n  const status = forecast.list[0].weather[0].description;\n  const statusString = `${status[0].toUpperCase()}${status.slice(1)}`;\n  if (lang === 'be') {\n    const translated = await translate(statusString, 'en-be');\n    weatherStatus.innerText = translated.text.toString();\n  } else {\n    weatherStatus.innerText = statusString;\n  }\n  if (lang !== 'en') {\n    const translated = await translate(city, `en-${lang}`);\n    document.getElementById('location').innerText = `${translated.text.toString()}, ${country}`;\n  } else {\n    document.getElementById('location').innerText = `${city}, ${country}`;\n  }\n  const date = showDate(time);\n  document.getElementById('date').innerText = date;\n  document.getElementById('time').innerText = setLocalClock(time);\n  currentWeather.querySelector('.degrees').innerText = `${Math.round(currentForecast.main.temp)}`;\n\n  const [, windMetric] = document.getElementById('wind').innerText.split(' ');\n  document.getElementById('wind').innerText = `${Math.round(currentForecast.wind.speed)} ${windMetric}`;\n  document.getElementById('humidity').innerText = `${currentForecast.main.humidity}%`;\n  document.getElementById('feels-like').querySelector('.degrees').innerText = `${Math.round(currentForecast.main.feels_like)}`;\n\n  const day1 = document.getElementById('tommorow');\n  const day2 = document.getElementById('day-after-tommorow');\n  const day3 = document.getElementById('after-the-day-after-tomorrow');\n\n  const nextDaysForecast = [];\n  forecast.list.map((item) => {\n    const now = new Date(time);\n    const dt = new Date(item.dt * 1000);\n    if (dt.getHours() === 15 && dt.getDay() !== now.getUTCDay()) {\n      nextDaysForecast.push(item);\n    }\n    return item;\n  });\n\n  while (nextDaysForecast.length > 3) {\n    nextDaysForecast.pop();\n  }\n\n  let day1Name = '';\n  let day2Name = '';\n  let day3Name = '';\n  let day1Num;\n  let day2Num;\n  let day3Num;\n\n  nextDaysForecast.forEach((item, idx) => {\n    const dt = new Date(item.dt * 1000);\n    if (idx === 0) { day1Num = dt.getDay(); }\n    if (idx === 1) { day2Num = dt.getDay(); }\n    if (idx === 2) { day3Num = dt.getDay(); }\n    return item;\n  });\n\n  switch (lang) {\n    case 'en':\n      day1Name = dayOfWeekENFull[day1Num];\n      day2Name = dayOfWeekENFull[day2Num];\n      day3Name = dayOfWeekENFull[day3Num];\n      break;\n    case 'ru':\n      day1Name = dayOfWeekRUFull[day1Num];\n      day2Name = dayOfWeekRUFull[day2Num];\n      day3Name = dayOfWeekRUFull[day3Num];\n      break;\n    case 'be':\n      day1Name = dayOfWeekBEFull[day1Num];\n      day2Name = dayOfWeekBEFull[day2Num];\n      day3Name = dayOfWeekBEFull[day3Num];\n      break;\n    default:\n      break;\n  }\n\n  day1.querySelector('.day').innerHTML = day1Name;\n  day2.querySelector('.day').innerHTML = day2Name;\n  day3.querySelector('.day').innerHTML = day3Name;\n\n  day1.querySelector('.degrees').innerHTML = `${Math.round(nextDaysForecast[0].main.temp)}`;\n  day2.querySelector('.degrees').innerHTML = `${Math.round(nextDaysForecast[1].main.temp)}`;\n  day3.querySelector('.degrees').innerHTML = `${Math.round(nextDaysForecast[2].main.temp)}`;\n\n  day1.querySelector('.icon').style.backgroundImage = `url('http://openweathermap.org/img/wn/${nextDaysForecast[0].weather[0].icon}@2x.png')`;\n  day2.querySelector('.icon').style.backgroundImage = `url('http://openweathermap.org/img/wn/${nextDaysForecast[1].weather[0].icon}@2x.png')`;\n  day3.querySelector('.icon').style.backgroundImage = `url('http://openweathermap.org/img/wn/${nextDaysForecast[2].weather[0].icon}@2x.png')`;\n\n  document.getElementById('latitude').innerText = locationString(lon);\n  document.getElementById('longitude').innerText = locationString(lat);\n\n  if (units === '°F') {\n    const degreesFields = document.querySelectorAll('.degrees');\n    degreesFields.forEach((item) => {\n      const a = item.innerText;\n      item.innerText = convertDegrees(a);\n      return item;\n    });\n  }\n}\n\nexport async function searchCity() {\n  const str = document.getElementById('search-city-input').value;\n  const coords = await getCoordinates(str);\n  const { lat, lon, name } = coords;\n  const mapInit = initMap(lon, lat);\n  ymaps.ready(mapInit);\n  const units = localStorage.getItem('units');\n  const lang = localStorage.getItem('lang');\n  let forecast;\n  if (lang === 'be') {\n    forecast = await getForecast(lon, lat, 'en');\n  } else {\n    forecast = await getForecast(lon, lat, lang);\n  }\n  const { timezone, country } = forecast.city;\n  const time = convertToLocalTime(timezone);\n  const queryString = createQueryString(forecast);\n  localStorage.setItem('currentWeatherDescription', queryString);\n  changeDOM(lat, lon, lang, name, country, time, forecast, units);\n  refreshBackground(queryString);\n  document.getElementById('search-city-input').value = '';\n}\n","import { fieldsEN } from './locale/en';\nimport { fieldsRU } from './locale/ru';\nimport { fieldsBE } from './locale/be';\nimport { dayOfWeekEN, dayOfWeekENFull, monthsEN } from './locale/date_time_en';\nimport { dayOfWeekRU, dayOfWeekRUFull, monthsRU } from './locale/date_time_ru';\nimport { dayOfWeekBE, dayOfWeekBEFull, monthsBE } from './locale/date_time_be';\nimport { translate } from './requests';\n\nexport async function translateDOM(prevLang, targetLang) {\n  let currentDayOfWeek;\n  let currentMonth;\n  let currentDayOfWeekFull;\n  let targetDayOfWeek;\n  let targetMonth;\n  let targetDayOfWeekFull;\n  let targetFields;\n\n  switch (prevLang) {\n    case 'en':\n      currentDayOfWeek = dayOfWeekEN;\n      currentMonth = monthsEN;\n      currentDayOfWeekFull = dayOfWeekENFull;\n      break;\n    case 'ru':\n      currentDayOfWeek = dayOfWeekRU;\n      currentMonth = monthsRU;\n      currentDayOfWeekFull = dayOfWeekRUFull;\n      break;\n    case 'be':\n      currentDayOfWeek = dayOfWeekBE;\n      currentMonth = monthsBE;\n      currentDayOfWeekFull = dayOfWeekBEFull;\n      break;\n    default:\n      break;\n  }\n\n  switch (targetLang) {\n    case 'en':\n      targetDayOfWeek = dayOfWeekEN;\n      targetMonth = monthsEN;\n      targetFields = fieldsEN;\n      targetDayOfWeekFull = dayOfWeekENFull;\n      break;\n    case 'ru':\n      targetDayOfWeek = dayOfWeekRU;\n      targetMonth = monthsRU;\n      targetFields = fieldsRU;\n      targetDayOfWeekFull = dayOfWeekRUFull;\n      break;\n    case 'be':\n      targetDayOfWeek = dayOfWeekBE;\n      targetMonth = monthsBE;\n      targetFields = fieldsBE;\n      targetDayOfWeekFull = dayOfWeekBEFull;\n      break;\n    default:\n      break;\n  }\n\n  // translate current weather block\n  const weatherStatus = document.getElementById('weather-status');\n  const translatedStatus = await translate(weatherStatus.innerText, `${prevLang}-${targetLang}`);\n  weatherStatus.innerText = translatedStatus.text.toString();\n\n  const location = document.getElementById('location');\n  const [city, country] = location.innerText.split(',');\n  const translatedCity = await translate(city, `${prevLang}-${targetLang}`);\n  location.innerText = `${translatedCity.text.toString()},${country}`;\n\n  const date = document.getElementById('date');\n  const [day, num, month] = date.innerText.split(' ');\n  date.innerText = `${targetDayOfWeek[currentDayOfWeek.indexOf(day)]} ${num} ${targetMonth[currentMonth.indexOf(month)]}`;\n\n  const changeLocBtn = document.getElementById('changeLoc');\n  changeLocBtn.innerText = targetFields.change_location;\n\n  const cityInput = document.getElementById('search-city-input');\n  cityInput.placeholder = targetFields.city;\n\n  const searchBtn = document.getElementById('search-btn');\n  searchBtn.innerText = targetFields.search;\n\n  // translate detailed forecast block\n  const windLabel = document.getElementById('wind-label');\n  windLabel.innerText = targetFields.wind_speed_label;\n\n  const windMetric = document.getElementById('wind');\n  const [speed] = windMetric.innerText.split(' ');\n  windMetric.innerText = `${speed} ${targetFields.wind_metric}`;\n\n  const humidityLabel = document.getElementById('humidity-label');\n  humidityLabel.innerText = targetFields.humidity_label;\n\n  const feelLikesLabel = document.getElementById('feels-label');\n  feelLikesLabel.innerText = targetFields.feels_like_label;\n\n  // translate future forecast\n  const daysName = document.querySelectorAll('.cards-wrapper > div > .day');\n  daysName.forEach((item) => {\n    item.innerText = targetDayOfWeekFull[currentDayOfWeekFull.indexOf(item.innerText)];\n    return item;\n  });\n}\n","// import 'babel-polyfill';\nimport {\n  refreshBackground, createQueryString, setUserSettings, convertDegrees,\n} from './settings';\nimport { getUserLocation, getForecast } from './requests';\nimport { initMap } from './map';\nimport { renderDom, searchCity } from './dom';\nimport { clock, updateClock } from './date_time';\nimport { translateDOM } from './translate';\n\nlet clockInterval;\nconst recognizer = new webkitSpeechRecognition();\n\n(async function init() {\n  if (!localStorage.getItem('lang') && !localStorage.getItem('units')) {\n    setUserSettings();\n  }\n  const units = localStorage.getItem('units');\n  const lang = localStorage.getItem('lang');\n  const { loc, city } = await getUserLocation();\n  const coords = loc.split(',');\n  const [lat, lon] = coords;\n  let forecast;\n  if (lang === 'be') {\n    forecast = await getForecast(lat, lon, 'en');\n  } else {\n    forecast = await getForecast(lat, lon, lang);\n  }\n  const { country } = forecast.city;\n  const queryString = createQueryString(forecast);\n  localStorage.setItem('currentWeatherDescription', queryString);\n  await renderDom(lat, lon, lang, city, country, forecast, units);\n  clockInterval = setInterval(clock, 1000);\n  refreshBackground(queryString);\n  const mapInit = initMap(lat, lon);\n  ymaps.ready(mapInit);\n}());\n\ndocument.addEventListener('click', async (evt) => {\n  if (evt.target.id === 'refresh-bg-btn') {\n    const query = localStorage.getItem('currentWeatherDescription');\n    await refreshBackground(query);\n  }\n  if (evt.target.classList.contains('celsius') || evt.target.classList.contains('fahrenheit')) {\n    if (evt.target.innerText !== localStorage.getItem('units')) {\n      localStorage.setItem('units', evt.target.innerText);\n      document.getElementById('units').querySelectorAll('button').forEach((item) => item.classList.toggle('active-unit'));\n      const unitsFields = document.querySelectorAll('.units');\n      const degreesFields = document.querySelectorAll('.degrees');\n      unitsFields.forEach((item) => {\n        item.innerText = localStorage.getItem('units');\n      });\n      degreesFields.forEach((item) => {\n        const value = item.innerText;\n        item.innerText = convertDegrees(value);\n      });\n    }\n  }\n  if (evt.target.classList.contains('dropdown-item') && evt.target.innerText.toLowerCase() !== localStorage.getItem('lang')) {\n    const prevLang = localStorage.getItem('lang');\n    localStorage.setItem('lang', evt.target.innerText.toLowerCase());\n    const targetLang = localStorage.getItem('lang');\n    document.getElementById('language-btn').innerText = targetLang.toUpperCase();\n    await translateDOM(prevLang, targetLang);\n  }\n  if (evt.target.id === 'search-btn') {\n    const inputValue = document.getElementById('search-city-input').value;\n    if (inputValue.trim().length !== 0) {\n      stopInterval();\n      await searchCity();\n      clockInterval = setInterval(updateClock, 60000);\n    } else {\n      alert('First enter the city');\n    }\n  }\n  if (evt.target.id === 'micro' || evt.target.classList.contains('fa-microphone')) {\n    speech();\n  }\n});\n\ndocument.addEventListener('keypress', async (evt) => {\n  const inputValue = document.getElementById('search-city-input').value;\n  if (evt.keyCode === 13 && inputValue.trim().length !== 0) {\n    stopInterval();\n    await searchCity();\n    clockInterval = setInterval(updateClock, 60000);\n  } else {\n    alert('First enter the city');\n  }\n});\n\nrecognizer.onresult = (event) => {\n  const result = event.results[event.resultIndex];\n  if (result.isFinal) {\n    document.getElementById('search-city-input').value = result[0].transcript;\n  }\n};\n\nfunction speech() {\n  recognizer.start();\n}\n\nexport default function stopInterval() {\n  clearInterval(clockInterval);\n}\n"]}