{"version":3,"sources":["scripts/requests.js","scripts/colors.js","scripts/canvas.js","scripts/main.js"],"names":["calcProportions","width","height","canvasWidth","canvasHeight","proportions","heightProportion","drawOnCanvas","url","image","Image","crossOrigin","src","onload","canvas","ctx","drawImage","x","y","localStorage","setItem","toDataURL","getLinkToImage","city","fetch","response","json","urls","small","currentColor","document","getElementById","prevColor","querySelector","rgbToHex","r","g","b","Error","toString","hex","rgbString","arr","split","Number","substring","slice","setCurrentColor","newColorInHex","style","backgroundColor","value","setActiveTool","name","querySelectorAll","forEach","item","classList","toggle","setCurrentSizeButton","size","imageToGrayscale","imageData","getImageData","data","i","length","avg","putImageData","changeCanvasSettings","pixelSize","Canvas","getContext","fillStyle","fillRect","color","evt","rect","getBoundingClientRect","clientX","left","clientY","top","activeTool","started","window","addEventListener","tool","currColor","preColor","getItem","dataURL","img","defaultFill","event","target","removeItem","alert","toolName","e","coordinates","getMousePos","Math","min","fillSector","colorOfCanvasPixel","beginPath","moveTo","coord","strokeStyle","lineTo","stroke","closePath","id","preventDefault","keyCode"],"mappings":"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","file":"main.e717ef0a.js","sourceRoot":"..","sourcesContent":["import { canvas } from './main';\n\nfunction calcProportions(width, height, canvasWidth, canvasHeight) {\n  const proportions = width / height;\n  if (proportions === 1) {\n    return {\n      'x': 0,\n      'y': 0,\n      'width': canvasWidth,\n      'height': canvasHeight,\n    };\n  } else if (proportions > 1) {\n    const heightProportion = height / width;\n    return {\n      'x': 0,\n      'y': (canvasHeight - (canvasHeight * heightProportion)) / 2,\n      'width': canvasWidth,\n      'height': canvasHeight * heightProportion,\n    };\n  } else if (proportions < 1) {\n    return {\n      'x': (canvasWidth - (canvasWidth * proportions)) / 2,\n      'y': 0,\n      'width': canvasWidth * proportions,\n      'height': canvasHeight,\n    };\n  }\n}\n\nfunction drawOnCanvas(url) {\n  const image = new Image();\n  image.crossOrigin = 'Anonymous';\n  image.src = url;\n  image.onload = () => {\n    const proportions = calcProportions(image.width, image.height, canvas.canvas.width, canvas.canvas.height);\n    canvas.ctx.drawImage(image, proportions.x, proportions.y, proportions.width, proportions.height);\n    if (!localStorage.image) {\n      localStorage.setItem('image', canvas.canvas.toDataURL());\n    }\n  };\n}\n\nasync function getLinkToImage(city) {\n  const url = `https://api.unsplash.com/photos/random?query=town,${city}\n  &client_id=e7085d7b9f940ceb950f950cc8c4108e56165596aa1a6917f91b24c32d355b8f`;\n  let response = await fetch(url);\n  let data = await response.json();\n  drawOnCanvas(data.urls.small);\n}\n\nexport { getLinkToImage, drawOnCanvas, calcProportions };\n","import { canvas } from './main';\nimport { drawOnCanvas } from './requests';\n\nconst currentColor = document.getElementById('current-color');\nconst prevColor = document.querySelector('.prevColor');\n\nfunction rgbToHex(r, g, b) {\n  if (r > 255 || g > 255 || b > 255) {\n    throw new Error('Invalid color component');\n  }\n  return ((r << 16) | (g << 8) | b).toString(16);\n}\n\nfunction hex(rgbString) {\n  const arr = rgbString.split(',');\n  const r = Number(arr[0].substring(4));\n  const g = Number(arr[1]);\n  const b = Number(arr[2].slice(1, -1));\n  return '#' + ('000000' + rgbToHex(r, g, b)).slice(-6);\n}\n\nfunction setCurrentColor(newColorInHex) {\n  prevColor.style.backgroundColor = currentColor.value;\n  currentColor.value = newColorInHex;\n}\n\nfunction setActiveTool(name) {\n  document.getElementById('tools').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-tool', false)));\n  document.querySelector(`.${name}`).classList.toggle('active-tool');\n  if (name === 'picker') {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', true)));\n  } else {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', false)));\n  }\n}\n\nfunction setCurrentSizeButton(size) {\n  document.querySelector('.btn-group').querySelectorAll('button').forEach((item) => (item.classList.toggle('active-button', false)));\n  document.querySelector(`.size${size}`).classList.toggle('active-button');\n}\n\nfunction imageToGrayscale() {\n  const imageData = canvas.ctx.getImageData(0, 0, canvas.canvas.width, canvas.canvas.height);\n  const data = imageData.data;\n  for (let i = 0; i < data.length; i += 4) {\n    const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n    data[i] = avg;\n    data[i + 1] = avg;\n    data[i + 2] = avg;\n  }\n  canvas.ctx.putImageData(imageData, 0, 0);\n}\n\nfunction changeCanvasSettings(size) {\n  localStorage.pixelSize = size;\n  canvas.canvas.pixelSize = size;\n  setCurrentSizeButton(size);\n  switch (size) {\n    case 4:\n      canvas.canvas.width = 128;\n      canvas.canvas.height = 128;\n      break;\n    case 2:\n      canvas.canvas.width = 256;\n      canvas.canvas.height = 256;\n      break;\n    case 1:\n      canvas.canvas.width = 512;\n      canvas.canvas.height = 512;\n      break;\n    default:\n      break;\n  }\n  if (localStorage.image) {\n    drawOnCanvas(localStorage.image);\n    localStorage.setItem('canvasImg', canvas.canvas.toDataURL());\n  }\n}\n\nexport {\n  rgbToHex, hex, setCurrentColor, setActiveTool,\n  currentColor, prevColor, setCurrentSizeButton,\n  imageToGrayscale, changeCanvasSettings,\n};\n","import { rgbToHex } from './colors';\n\nclass Canvas {\n  constructor(pixelSize = 4, width = 128, height = 128) {\n    this.pixelSize = pixelSize;\n    this.canvas = document.getElementById('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.canvas.width = width;\n    this.canvas.height = height;\n  }\n\n  defaultFill() {\n    this.ctx.fillStyle = '#FFFFFF';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  fillSector(x, y, color) {\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(x, y, this.pixelSize, this.pixelSize);\n  }\n\n  colorOfCanvasPixel(x, y) {\n    const data = this.ctx.getImageData(x, y, 1, 1).data;\n    return '#' + ('000000' + rgbToHex(data[0], data[1], data[2])).slice(-6);\n  }\n\n  getMousePos(evt) {\n    const rect = this.canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top,\n    };\n  }\n}\n\nexport { Canvas };\n","import { Canvas } from './canvas';\nimport { hex, setCurrentColor, setActiveTool, currentColor, prevColor, setCurrentSizeButton, imageToGrayscale, changeCanvasSettings } from './colors';\nimport { getLinkToImage } from './requests';\n\nlet canvas;\nlet activeTool;\nlet started = false;\nlet pixelSize;\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  activeTool = localStorage.tool || 'pencil';\n  setActiveTool(activeTool);\n  currentColor.value = localStorage.currColor || '#008000';\n  prevColor.style.backgroundColor = localStorage.preColor || '#808080';\n  pixelSize = Number(localStorage.pixelSize) || 4;\n  if (!localStorage.getItem('canvasImg')) {\n    canvas = new Canvas();\n    canvas.defaultFill();\n  } else {\n    canvas = new Canvas(pixelSize, 512 / pixelSize, 512 / pixelSize);\n    const dataURL = localStorage.getItem('canvasImg');\n    const img = new Image();\n    img.src = dataURL;\n    img.onload = () => {\n      canvas.ctx.drawImage(img, 0, 0, canvas.canvas.width, canvas.canvas.height);\n    };\n  }\n  setCurrentSizeButton(pixelSize);\n});\n\nwindow.addEventListener('beforeunload', () => {\n  localStorage.setItem('tool', activeTool);\n  localStorage.setItem('currColor', currentColor.value);\n  localStorage.setItem('preColor', hex(prevColor.style.backgroundColor));\n  localStorage.setItem('canvasImg', canvas.canvas.toDataURL());\n});\n\ndocument.querySelector('.btn-group').addEventListener('click', (event) => {\n  switch (event.target.classList[2]) {\n    case 'size4':\n      pixelSize = 4;\n      changeCanvasSettings(pixelSize);\n      break;\n    case 'size2':\n      pixelSize = 2;\n      changeCanvasSettings(pixelSize);\n      break;\n    case 'size1':\n      pixelSize = 1;\n      changeCanvasSettings(pixelSize);\n      break;\n    default:\n      break;\n  }\n});\n\ndocument.getElementById('load-button').addEventListener('click', () => {\n  if (localStorage.image) {\n    localStorage.removeItem('image');\n    canvas.defaultFill();\n  }\n  const city = document.getElementById('city-input').value || 'Minsk';\n  getLinkToImage(city);\n});\n\ndocument.getElementById('grayscale-button').addEventListener('click', () => {\n  if (!localStorage.image) {\n    alert('First you need upload the image :)');\n  } else {\n    imageToGrayscale();\n  }\n});\n\ndocument.getElementById('tools').addEventListener('click', (event) => {\n  document.getElementById('tools').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-tool', false)));\n  event.target.classList.toggle('active-tool');\n  const classList = event.target.classList;\n  const [, toolName, ] = classList;\n  activeTool = toolName;\n  if (activeTool === 'picker') {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', true)));\n  } else if (activeTool === 'clear') {\n    canvas.defaultFill();\n    localStorage.removeItem('image');\n    localStorage.removeItem('canvasImg');\n  } else {\n    document.getElementById('colors').querySelectorAll('p').forEach((item) => (item.classList.toggle('active-colors', false)));\n  }\n});\n\ndocument.getElementById('canvas').addEventListener('mousedown', (e) => {\n  const coordinates = canvas.getMousePos(e);\n  const x = Math.min(coordinates.x / pixelSize);\n  const y = Math.min(coordinates.y / pixelSize);\n  switch (activeTool) {\n    case 'bucket':\n      canvas.fillSector(x, y, currentColor.value);\n      break;\n    case 'picker':\n      setCurrentColor(canvas.colorOfCanvasPixel(x, y));\n      break;\n    case 'pencil':\n      canvas.ctx.beginPath();\n      canvas.ctx.moveTo(x, y);\n      started = true;\n      document.getElementById('canvas').addEventListener('mousemove', (evt) => {\n        if (started) {\n          const coord = canvas.getMousePos(evt);\n          canvas.ctx.strokeStyle = currentColor.value;\n          canvas.ctx.lineTo(Math.min(coord.x / pixelSize), Math.min(coord.y / pixelSize));\n          canvas.ctx.stroke();\n        }\n      });\n      document.getElementById('canvas').addEventListener('mouseup', () => {\n        if (started) {\n          canvas.ctx.closePath();\n          started = false;\n        }\n      });\n      break;\n    default:\n      break;\n  }\n});\n\ndocument.getElementById('colors').addEventListener('click', (event) => {\n  if (activeTool === 'picker') {\n    if (event.target.id === 'current-color') {\n      prevColor.style.backgroundColor = currentColor.value;\n    }\n    switch (event.target.classList[1]) {\n      case 'second':\n        setCurrentColor(hex(prevColor.style.backgroundColor));\n        break;\n      case 'third':\n        setCurrentColor('#CD0000');\n        break;\n      case 'fourth':\n        setCurrentColor('#0000ff');\n        break;\n      default:\n        break;\n    }\n  } else if (activeTool !== 'picker' && event.target.id === 'current-color') {\n    event.preventDefault();\n  }\n});\n\ndocument.addEventListener('keydown', (event) => {\n  switch (event.keyCode) {\n    case 66:\n      activeTool = 'bucket';\n      setActiveTool(activeTool);\n      break;\n    case 67:\n      activeTool = 'picker';\n      setActiveTool(activeTool);\n      break;\n    case 80:\n      activeTool = 'pencil';\n      setActiveTool(activeTool);\n      break;\n    default:\n      break;\n  }\n});\n\nexport { currentColor, prevColor, canvas };\n"]}